

#include <stdio.h>
#include <stdlib.h>
#include  <string.h>

#define DataLen 245


//数据打包工具函数
#define LocalID 0x01
#define DestinationID 0x20
#define ifAck 0x01
#define functionCode 0xA1

unsigned char DataPacking(unsigned char len, unsigned char localID,unsigned char destinationID,unsigned char IfAck,unsigned char FunctionCode,unsigned char *Data,unsigned char *Packed);

int main()
{
	unsigned char receive[DataLen]={0xff,0xff};//假设是数据区内容
	unsigned char savebuff[DataLen]={0,0,0,0,0,0,0,0,0,0};//处理后放到buff的数据
	unsigned char res,lastdata;
	int savelen;
	int i=0;
	int count=0;
	int state=0;

    puts("数据打包测试\r\n");
	printf("数据区内容为：\t");
	for(i=0; receive[i]!='\0';i++)
		printf("%02x ",receive[i]);
	puts("\r\n");
	savelen=DataPacking(i,LocalID,DestinationID,ifAck,functionCode,receive,savebuff);


	printf("\r\n打包后的数据为：\t");
	for(i=0;i<savelen;i++)
		printf("%02x ",savebuff[i]);
	puts("\r\n");
    system("pause");
    return 0;
}



//----------------------------------函数说明--------------------------------------------//
//函数功能：	将数据按照协议打包成一个帧
//入口参数：	len:数据区长度，不算身份识别码和功能码
//					localID：本地发送者的编码
//					destinationID：远程接收者的编码
//					IfAck：是否需要应答信号
//					FunctionCode：功能码
//					*Data：需要打包的数据区的地址
//					*Packed：用来存储打包结果的地址
//返回值：	打包后整个数据帧的长度
//--------------------------------函数测试---------------------------------------------------//
//假设ReceiveBuff为{0x01,0x02,0x03,0x04,0x05},长度为5，即下面函数第一个入口参数
//执行函数DataPacking(5,0x20,0x21,0x01,0x58,ReceiveBuff,packedbuff);
//packedbuff的内容为{AA 55 09 20 21 01 58 01 02 03 04 05 50 55 AA }
//------------------------------------------------------------------------------------------
//作者：Liao_tingchun		
//修改日期：2020/05/20
//修改内容：初次完成基本功能
unsigned char DataPacking(unsigned char len, unsigned char localID,unsigned char destinationID,unsigned char IfAck,unsigned char FunctionCode,unsigned char *Data,unsigned char *Packed)
{
	unsigned char parity=len+4;
	unsigned int i=0;
	*(Packed+i) = 0xAA;i++;//添加包头AA
	*(Packed+i) = 0x55;i++;//添加包头55
	*(Packed+i) = len+4;i++;//添加长度len
	*(Packed+i) = localID;i++;//添加本地识别码
	*(Packed+i) = destinationID;i++;//添加远程接收者识别码
	*(Packed+i) = IfAck;i++;//添加功能码1，是否需要应答
	*(Packed+i) = FunctionCode;i++;//添加功能码

	for(i=0;i<len;i++)	//存储数据	
		*(Packed+7+i) = *(Data+i);//保存数据
	for(i=3;i<7+len;i++)
		parity = parity ^ *(Packed+i);//计算校验和
	
	i=len+7;
	*(Packed+i) = parity;i++;//添加校验和
	*(Packed+i) = 0x55;i++;//添加包尾55
	*(Packed+i) = 0xAA;i++;//添加包尾AA
	return len+10;//返回打包后整个数据帧的长度
}
//Function OK



