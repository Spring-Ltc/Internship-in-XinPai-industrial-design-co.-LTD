C51 COMPILER V9.54   TASKUART                                                              05/17/2020 11:10:32 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TASKUART
OBJECT MODULE PLACED IN .\Objects\TaskUart.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Spring Program Files(x86)\MDK4 and MDK5\C51\BIN\C51.EXE USER\TaskUart.c LARG
                    -E OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\TaskUart.lst) TABS(2) OBJECT(.\Objects\TaskUart.obj)

line level    source

   1          
   2          
   3          #include "TaskUart.h"
   4          
   5          
   6          
   7          //--------------------------º¯ÊýËµÃ÷--------------------------------------------//
   8          //º¯Êý¹¦ÄÜ£º  Íê³É¶ÔÊý¾ÝÖ¡µÄÐ£Ñé
   9          //Èë¿Ú²ÎÊý£º  *DATaFrame:´ýÐ£ÑéµÄÊý¾ÝÖ¡µØÖ·
  10          //·µ»ØÖµ£º  ·µ»Ø0±íÊ¾Ð£Ñé³É¹¦£¬·µ»ØÆäËûÖµ±íÊ¾Ð£ÑéÊ§°Ü
  11          //                      £¨1:°üÍ·´íÎó£»2:°üÎ²»ò³¤¶È´íÎó£»3:Ð£ÑéºÍ´íÎó£©
  12          
  13          //-------------------------º¯Êý²âÊÔ----------------------------------------//
  14          //text1£ºÊäÈë£ºAA 55 06 20 21 00 58 FF FF 5F 55 AA    ·µ»ØÖµ£º0   ËµÃ÷£ºÊý¾ÝÖ¡Ð£Ñé³É¹¦
  15          //text2£ºÊäÈë£ºAA 55 06 20 21 00 58 FF FF 11 55 AA    ·µ»ØÖµ£º3   ËµÃ÷£ºÐ£ÑéºÍ´íÎó
  16          //text3£ºÊäÈë£ºAA 06 20 21 00 58 FF FF 5F 55 AA       ·µ»ØÖµ£º1   ËµÃ÷£º°üÍ·´íÎó
  17          //text4£ºÊäÈë£ºAA 55 06 20 21 00 58 FF FF 5F 55       ·µ»ØÖµ£º2   ËµÃ÷£º°üÎ²´íÎó
  18          //text5£ºÊäÈë£ºAA 55 04 20 21 00 58 FF FF 5F 55 AA    ·µ»ØÖµ£º2   ËµÃ÷£ºÊý¾Ý³¤¶È´íÎó
  19          //--------------------------------
  20          //×÷Õß£ºLiao_tingchun   
  21          //ÐÞ¸ÄÈÕÆÚ£º2020/05/15
  22          //ÐÞ¸ÄÄÚÈÝ£º³õ´ÎÍê³É»ù±¾¹¦ÄÜ
  23          //----------------------------
  24          u8 DataValidityCheck(u8 *DataFrame)
  25          {
  26   1        u8 i = 0,datalen = 0,Parity = 0;
  27   1        u8 *point;
  28   1        point = DataFrame;
  29   1        if( (*(point) != 0xAA) || (*(point+1) != 0x55))
  30   1          return 1;//Êý¾Ý°üÍ·´íÎó
  31   1        
  32   1        datalen = *(point+2);//»ñÈ¡Êý¾Ý²¿·Ö³¤¶È
  33   1        if( (*(point+datalen+4) != 0x55) || (*(point+datalen+5) != 0xAA))
  34   1          return 2;//Êý¾Ý°üÎ²´íÎó
  35   1        
  36   1        Parity = datalen;
  37   1        for(i=3;i<datalen+3;i++)//¼ÆËãÐ£ÑéºÍ
  38   1          Parity =Parity ^ *(point+i);//°´Î»Òì»òÔËËã
  39   1        if(Parity != *(point+datalen+3))
  40   1          return 3;//Ð£ÑéºÍ´íÎó
  41   1        
  42   1        return 0;//Ð£Ñé³É¹¦
  43   1      }
  44          
  45          
  46          
  47          
  48          
  49          
  50          
  51          //--------------------------º¯ÊýËµÃ÷--------------------------------------------//
  52          //º¯Êý¹¦ÄÜ£º  Êý¾ÝÐ£Ñé³É¹¦ºó£¬´Ó¿Ø°åµ÷ÓÃ¸Ãº¯Êý½âÎöÊý¾Ý
  53          //Èë¿Ú²ÎÊý£º  *DataBuff:ÐèÒª½âÎöµÄÊý¾ÝÖ¡µØÖ·
  54          //·µ»ØÖµ£º    ÎÞ
C51 COMPILER V9.54   TASKUART                                                              05/17/2020 11:10:32 PAGE 2   

  55          
  56          //--------------------------------
  57          //×÷Õß£ºLiao_tingchun   
  58          //ÐÞ¸ÄÈÕÆÚ£º2020/05/16
  59          //ÐÞ¸ÄÄÚÈÝ£º³õ´ÎÍê³É»ù±¾¹¦ÄÜ
  60          //----------------------------
  61          void DataAnalyze(u8 *DataBuff)
  62          {
  63   1        u8 i=0;
  64   1        u8 *point;
  65   1        u8 data_H,data_L;
  66   1        u8 FunctionCode = *(point+6);//¹¦ÄÜÂë
  67   1        point = DataBuff;
  68   1        switch(FunctionCode)
  69   1        {
  70   2          case 0x55://Ö÷¿Ø°åÖÁ´Ó¿Ø°åµÄ¿ØÖÆÐÅÏ¢
  71   2          {
  72   3            for(i=0;i<6;i++)
  73   3              MasterDataBuff[i] = *(point+7+i);//Ð´Èë6¸öLEDµÄ¿ØÖÆ×´Ì¬
  74   3            for(i=0;i<8;i++)
  75   3              MasterDataBuff[i+12] = *(point+19+i);//Ð´Èë8¸ö¼ÌµçÆ÷µÄ¿ØÖÆ×´Ì¬
  76   3            for(i=0;i<3;i++)
  77   3              MasterDataBuff[i+23] = *(point+30+i);//Ê¹ÄÜ3¸ö¿×Î»      
  78   3            TaskControlFlag = 1;
  79   3            break;
  80   3          }
  81   2          case 0x57://ÉèÖÃÏÞÖÆ³éÒº´ÎÊý
  82   2          {
  83   3            data_H = *(point+7);
  84   3            data_L = *(point+8);
  85   3            MasterDataBuff[MAlimit] = data_H;MasterDataBuff[MAlimit+1] = data_L;//EEPROMÈÎÎñ´ÓÕâÀï¶ÁÈ¡²¢Ð´Èë£¬Íê³ÉÉ
             -èÖÃ
  86   3            TaskEEPROMFlag = 1;//±êÖ¾Î»ÖÃÎ»£¬EEPROMÈÎÎñÐ´ÈëÍê³ÉºóÇå±êÖ¾Î»
  87   3            break;
  88   3          }
  89   2          case 0x58://Ñ¯ÎÊÊ£ÓàÏÞÖÆ´ÎÊý
  90   2          {
  91   3            //½âÎöÍê³Éºó£¬Ö±½Ó·¢ËÍ×´Ì¬Êý¾ÝÇøµÄËùÓÐÄÚÈÝ£¬»ò¶ÁÈ¡×´Ì¬Êý¾ÝÇøÖ»·¢ËÍ´ÎÊýÄÚÈÝ,»òTaskUploadFlagÖÃÎ»ÈÃWhile(
             -1)ÀïÃæµÄÈÎÎñ·¢ËÍ
  92   3            //Send(SlaveDataBuff) »ò Send(LimitNumber)
  93   3            TaskUploadFlag = 1;//ÖÃÎ»¸ÃÉÏ´«ÈÎÎñ
  94   3            break;
  95   3          }
  96   2          case 0x59://²éÑ¯¹¤×÷×´Ì¬
  97   2          {
  98   3            TaskUploadFlag = 1;//ÖÃÎ»¸ÃÉÏ´«ÈÎÎñ
  99   3            break;
 100   3          }
 101   2          case 0x5A://ÉèÖÃÉÏ´«Ê±¼ä¼ä¸ô
 102   2          {
 103   3            data_H = *(point+7);
 104   3            data_L = *(point+8);  //Ö»ÓÃµ½ÁËµÍ8Î»Êý¾Ý
 105   3            SlaveDataBuff[SAuploadtime] = data_L;//±¾µØ±£´æÊ±¼ä¼ä¸ô
 106   3            MasterDataBuff[MAuploadtime] = data_L;
 107   3            //Ö±½ÓÐÞ¸ÄÖ÷¶¯ÉÏ´«Êý¾Ý¼ÆÊýÆ÷µÄãÐÖµ,»ò¼ÆÊý±äÁ¿ãÐÖµ¶ÁÈ¡MasterDataBuffµÄÖµ
 108   3            break;
 109   3          }
 110   2          default:break;
 111   2        } 
 112   1      }
 113          
 114          
C51 COMPILER V9.54   TASKUART                                                              05/17/2020 11:10:32 PAGE 3   

 115          
 116          
 117          //--------------------------º¯ÊýËµÃ÷--------------------------------------------//
 118          //º¯Êý¹¦ÄÜ£º  ½«Êý¾Ý°´ÕÕÐ­Òé´ò°ü³ÉÖ¡²¢·¢ËÍ
 119          //Èë¿Ú²ÎÊý£º  FunctionCode:¹¦ÄÜÂë
 120          //          *DataBuff:ÐèÒª·¢ËÍµÄÊý¾ÝÇøµÄÄÚÈÝ
 121          //·µ»ØÖµ£º    ÎÞ
 122          
 123          //--------------------------------
 124          //×÷Õß£ºLiao_tingchun   
 125          //ÐÞ¸ÄÈÕÆÚ£º2020/05/16
 126          //ÐÞ¸ÄÄÚÈÝ£º³õ´ÎÍê³É»ù±¾¹¦ÄÜ
 127          //----------------------------
 128          //void FramePacking(u8 FunctionCode,u8 *DataBuff)
 129          //{
 130          
 131          //  u8 datalen;//¸ÃÌõÖ¸ÁîµÄÊý¾ÝÇø³¤¶È
 132          //  u8 *point = DataBuff;
 133          //  u8 Funcode = FunctionCode;
 134          ////  u8 SendStr[MaxSendStr];
 135          //  u8 Parity;
 136          //  u8 i=0; //Êý¾Ý´®ÏÂ±ê
 137          //  if(FunctionCode == 0x70)  datalen = 4+2;
 138          //  else if(FunctionCode == 0x71) datalen = 4+23;
 139          ////  u8 SendStr[MaxSendStr] =    //ÏÂÃæÖ»»º´æµ½Ð£ÑéÎ»Ö®Ç°
 140          ////                    {0xAA,0x55,//Êý¾Ý°üÍ·
 141          ////                  //  datalen,//Êý¾Ý¶Î³¤¶È
 142          ////                    0x21,0x20,//·¢ËÍºÍ½ÓÊÕ·½Ê¶±ðÂë
 143          ////                    0x00,//ÊÇ·ñÐèÒªÓ¦´ð
 144          ////                    Funcode//¹¦ÄÜÂë£¬ÓÉ×ÜÐ­ÒéÎÄµµ¹æ¶¨
 145          ////                    };
 146          ////  for(i=0;i<datalen-4;i++)  //Ìí¼ÓÊý¾ÝÇø              
 147          ////        SendStr[i+7] = *(point+i);  
 148          ////                    
 149          ////  Parity = datalen;
 150          ////  for(i=3;i<datalen+3;i++)//¼ÆËãÐ£ÑéÊý¾Ý
 151          ////  {
 152          ////    Parity   =Parity^SendStr[i];//°´Î»Òì»òÔËËã
 153          ////  }
 154          ////  SendStr[i]=Parity;i++;//Ìí¼ÓÐ£ÑéÊý¾Ý
 155          ////  SendStr[i]=0x55;i++;
 156          ////  SendStr[i]=0xAA;i++;//Ìí¼ÓÊý¾Ý°üÎ²²¿
 157          //////Êý¾ÝÖ¡´ò°üÍê±Ï
 158          
 159          ////  USART_SendLenData(PortSlave,SendStr,datalen+6);//·¢ËÍÊý¾Ý°ü
 160          //}
 161          
 162          
 163          
 164          
 165          
 166          
 167          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    527    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.54   TASKUART                                                              05/17/2020 11:10:32 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
