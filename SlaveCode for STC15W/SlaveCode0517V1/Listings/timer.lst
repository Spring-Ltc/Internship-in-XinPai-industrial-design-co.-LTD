C51 COMPILER V9.54   TIMER                                                                 05/17/2020 11:10:31 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Spring Program Files(x86)\MDK4 and MDK5\C51\BIN\C51.EXE USER\timer.c LARGE O
                    -PTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) TABS(2) OBJECT(.\Objects\timer.obj)

line level    source

   1          
   2          /*************  功能说明  **************
   3          
   4          本文件为STC15xxx系列的定时器初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
   5          
   6          
   7          ******************************************/
   8          
   9          #include  "timer.h"
  10          u16 T1_1MS1=0,T1_10MS2=0, Second1 ;
  11          u16 T0_100MS1=0,T0_100MS10=0,T0_100MS2;
  12           
  13          ///********************* Timer0中断函数************************/
  14           void timer0_int (void) interrupt TIMER0_VECTOR
  15           {
  16   1        T0_100MS2++;
  17   1        T0_100MS1++;
  18   1        if(T0_100MS1>=10)
  19   1        {
  20   2          T0_100MS1=0;
  21   2          T0_100MS10=1;
  22   2          Second1=1;
  23   2         }
  24   1          if(T0_100MS2>=200)
  25   1        {
  26   2          T0_100MS2=1;
  27   2         }
  28   1       
  29   1       }
  30          
  31          /********************* Timer1中断函数************************/
  32          void timer1_int (void) interrupt TIMER1_VECTOR
  33          { 
  34   1         
  35   1        
  36   1        T1_1MS1++;
  37   1        T1_10MS2++;
  38   1         
  39   1        if(T1_10MS2>=10)
  40   1          {
  41   2             T1_10MS2=0;
  42   2             
  43   2            
  44   2          }
  45   1        if ((T1_1MS1)>=100)     //MilliSecond
  46   1        { 
  47   2          //P41 = ~P41;
  48   2          T1_1MS1=0;     //1MS Timer
  49   2          //Second1=1;
  50   2         // Second2=1;Second3=1;Second4=1;Second5=1; 
  51   2        }
  52   1      }
  53          
  54          
C51 COMPILER V9.54   TIMER                                                                 05/17/2020 11:10:31 PAGE 2   

  55          /********************* Timer2中断函数************************/
  56          void timer2_int (void) interrupt TIMER2_VECTOR
  57          {
  58   1        //P10 = ~P10;
  59   1      
  60   1      }
  61          
  62          
  63          //========================================================================
  64          // 函数: u8 Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  65          // 描述: 定时器初始化程序.
  66          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  67          // 返回: 成功返回0, 空操作返回1,错误返回2.
  68          // 版本: V1.0, 2012-10-22
  69          //========================================================================
  70          u8  Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  71          {
  72   1        if(TIM > Timer2)  return 1; //空操作
  73   1      
  74   1        if(TIM == Timer0)
  75   1        {
  76   2          TR0 = 0;    //停止计数
  77   2          if(TIMx->TIM_Interrupt == ENABLE)   ET0 = 1;  //允许中断
  78   2          else                  ET0 = 0;  //禁止中断
  79   2          if(TIMx->TIM_Polity == PolityHigh)    PT0 = 1;  //高优先级中断
  80   2          else                  PT0 = 0;  //低优先级中断
  81   2          if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2; //错误
  82   2          TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3:
             - 16位自动重装, 不可屏蔽中断
  83   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)  AUXR &= ~0x80;  //12T
  84   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  0x80;  //1T
  85   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  TMOD |=  0x04;  //对外计数或分频
  86   2          else                    TMOD &= ~0x04;  //定时
  87   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;  //输出时钟
  88   2          else              INT_CLKO &= ~0x01;  //不输出时钟
  89   2          
  90   2          TH0 = (u8)(TIMx->TIM_Value >> 8);
  91   2          TL0 = (u8)TIMx->TIM_Value;
  92   2          if(TIMx->TIM_Run == ENABLE) TR0 = 1;  //开始运行
  93   2          return  0;    //成功
  94   2        }
  95   1      
  96   1        if(TIM == Timer1)
  97   1        {
  98   2          TR1 = 0;    //停止计数
  99   2          if(TIMx->TIM_Interrupt == ENABLE)   ET1 = 1;  //允许中断
 100   2          else                  ET1 = 0;  //禁止中断
 101   2          if(TIMx->TIM_Polity == PolityHigh)    PT1 = 1;  //高优先级中断
 102   2          else                  PT1 = 0;  //低优先级中断
 103   2          if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2; //错误
 104   2          TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
 105   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)  AUXR &= ~0x40;  //12T
 106   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  0x40;  //1T
 107   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  TMOD |=  0x40;  //对外计数或分频
 108   2          else                    TMOD &= ~0x40;  //定时
 109   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;  //输出时钟
 110   2          else              INT_CLKO &= ~0x02;  //不输出时钟
 111   2          
 112   2          TH1 = (u8)(TIMx->TIM_Value >> 8);
 113   2          TL1 = (u8)TIMx->TIM_Value;
 114   2          if(TIMx->TIM_Run == ENABLE) TR1 = 1;  //开始运行
 115   2          return  0;    //成功
C51 COMPILER V9.54   TIMER                                                                 05/17/2020 11:10:31 PAGE 3   

 116   2        }
 117   1      
 118   1        if(TIM == Timer2)   //Timer2,固定为16位自动重装, 中断无优先级
 119   1        {
 120   2          AUXR &= ~(1<<4);  //停止计数
 121   2          if(TIMx->TIM_Interrupt == ENABLE)     IE2  |=  (1<<2);  //允许中断
 122   2          else                    IE2  &= ~(1<<2);  //禁止中断
 123   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return 2;
 124   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)  AUXR &= ~(1<<2);  //12T
 125   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  (1<<2);  //1T
 126   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  AUXR |=  (1<<3);  //对外计数或分频
 127   2          else                    AUXR &= ~(1<<3);  //定时
 128   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;  //输出时钟
 129   2          else              INT_CLKO &= ~0x04;  //不输出时钟
 130   2      
 131   2          TH2 = (u8)(TIMx->TIM_Value >> 8);
 132   2          TL2 = (u8)TIMx->TIM_Value;
 133   2          if(TIMx->TIM_Run == ENABLE) AUXR |=  (1<<4);  //开始运行
 134   2          return  0;    //成功
 135   2        }
 136   1        return 2; //错误
 137   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    594    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
